# cc
Cognitive Computing workshop 

keywords:
* Cognitive Science
* Artificial Intelligence
* Machine Learning
* Neuroscience


###############################################################################
#
#     COURSE OVERVIEW
#
###############################################################################

00. Introduction to Python programming language
01. Cognitive Computing - general view
02. Data structure, ML workflow
03. Preprocessing and Metrics (model performance)- exercises
04. Artificial Neural Networks
05. Artificial Neural Networks - exercises
06. Supported Vector Machines
07. Supported Vector Machines - exercises
08. Multiclass classification, reconsolidation
09. Multiclass classification - exercises
*10. Deep learning
*11. Deep learning - exercises


###############################################################################
#
#     DETAILED INFORMATIONS
#
###############################################################################

###############################################################################
00. Introduction to Python programming language

    Python is simple, clear and well supported.
    The blessing of ipython.
    Variables.
    List and array.
    Loops.
    Functions (methods).
    Import packages.
    *Classes.
    *Package structure and installation.
###############################################################################

###############################################################################
01. Cognitive Computing - general view

    Why Artificial Intelligence is what you think and why it isn't.
    Why practice is better than theory (to use tool and to create tool). 
    Machine Learning and it's tools.
    Does AI==ML? And why (generally) not.  
    Past, present, future. And why (mainly) future.  
    Schemea.  
###############################################################################

###############################################################################
02. Data structure, ML workflow

    Dimensionality.
    Our examples' data structure (neuroscientific data).
    Features, attributes, classes, decisions.
    Curse of dimensionality.
    Flattening and information loss.
    Importance of data spatial orientation.
    Workflows.
    Supervised vs unsupervised learning.
###############################################################################

###############################################################################
03. Preprocessing and Metrics (model performance) - exercises

    Feature selection.
    SelectKBest (data variability).
    Feature extraction.
    Principal Component Analysis (PCA).
    Confusion matrices.
    Precission and  accuracy.
    Cross validation.
    Sklearn's cross validation score and ShuffleSplit
    Cross validation Pipeline
###############################################################################

###############################################################################
04. Artificial Neural Networks

    General intuitions.
    Percepton.
    Sigmoid neuron.
    Learning.
    Testing.

Sources:
http://neuralnetworksanddeeplearning.com/chap1.html
###############################################################################

###############################################################################
05. Artificial Neural Networks - exercises

    pybrain - Slightly modified pybrain fnn example (classify color):
https://github.com/grik/cc/blob/master/fnn_pybrain/fnn_simple.py

    Exercise 05.00.
        Learn the net correctly classify red and green color.

    Exercise 05.01.
        Change the number of neurons in hidden layer (lower or raise it)
        and see what happens.

    pybrain - Additional utilites to previous script
    (learning curve and data visualisation):
https://github.com/grik/cc/blob/master/fnn_pybrain/fnn_addons.py
###############################################################################

###############################################################################
06. Supported Vector Machines
    Hyperplane.
    Classification.
    Parameters.
    Linear kernel vs RBF kernel
###############################################################################

###############################################################################
07. Supported Vector Machines - exercises

################

    simple example of fMRI Supported Vector Classifier:

https://github.com/grik/cc/blob/master/svc_sklearn/svc_simple.py
################
################

    fMRI data 2-class visual cortex BOLD contrast classification using
    feature selection (sklearn SelectKBest) and linear SVC (sklearn SVC):

https://github.com/grik/cc/blob/master/svc_sklearn/svc_selectkbest.py
################
################

    fMRI data 2-class visual cortex BOLD contrast classification using
    feature extraction (sklearn PCA) and linear SVC (sklearn SVC):

https://github.com/grik/cc/blob/master/svc_sklearn/svc_pca.py
################
################
    
    Exercise 07.00.
        Change the feature selection's (SelectKBest) k parameter to 50 and see
        what happens. How does the classifier learn having less variables
        (less information)?

    Exercise 07.01.
        Change the feature extraction's (PCA) n_components parameter to 50
        and see what happens. How does the classifier learn having less
        variables (less information)?
###############################################################################

###############################################################################
08. Multiclass classification and reconsolidation

    Up to this time we were considering only two classes (one vs one)
    classification scenarios. Now we introduce multiclass classfication (three
    and more).

    One vs one
    One vs rest
    Multi-class classification

    ANN are better than SVC for performing multiclass classification
    (in our case).
###############################################################################


###############################################################################
09. Multiclass classification - exercises

    SVM multiclass   
    ANN multiclass
###############################################################################

###############################################################################
*10. Deep learning
    
    Why do we need deep learning at all?
    It performs better than other classifiers.
http://arxiv.org/abs/1502.00093

    We will use pylearn2:
http://deeplearning.net/software/pylearn2/tutorial/notebook_tutorials.html#notebook-tutorials

    A short story about the vast networks.
    Convolution.
    From Softmax to Convolution with pylearn2.
###############################################################################

###############################################################################
*11. Deep learning - exercises

    TBA
###############################################################################
